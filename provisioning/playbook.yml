[integration]

[qualification]

[staging]

[production]

- hosts: integration
      user: tec-tomcat-i
      uid: 1142

- hosts: all
  vars:
      jre_ver:     "8"
      tc_ver:      8.0.32
      tc_eng_dir:  /sysapp/tomcat-engine
      tc_jre_dir:  /sysapp/tomcat-jre
      tc_cfg_dir:  /sysapp/tomcat-conf
      farm:        "01"
      node:        "1" 
      supp:        ''
      dom:         pepspmt
      env:          i
      inst:        "{{ dom }}-{{ farm }}{{node}}{{supp}-{{ env }}"
      inst_dir:    /sysapp/tomcat-instances/{{ dom }}-{{ farm }}{{ node }}{ {supp }}-{{ env }}
      log_dir:     /var/log/tomcat/instances/{{ inst }}
      logapp_dir:  /var/log/tomcat/apps/{{ inst }}
		
  sudo: yes

  tasks:


    - name: Creer groupe tomcat
      group: name=tec-tomcat gid=1146 state=present system=yes

    - name: Creer user tomcat
      user: name=tec-tomcat comment="John Doe" uid=1146 group=tec-tomcat system=yes

    - name: Creer user tomcat specifique environnemt
      user: name={{ user }} comment="John Doe" uid={{ uid }} group=tec-tomcat system=yes

    - name: Verif que tomcat est la
      stat: path={{ tc_eng_dir }}/apache-tomcat-{{ tc_ver }}/bin/catalina.sh
      register: core

    - name: download tomcat
      get_url:
       url=http://archive.apache.org/dist/tomcat/tomcat-8/v{{ tc_ver}}/bin/apache-tomcat-{{ tc_ver}}.tar.gz
       dest=/tmp/apache-tomcat-{{ tc_ver }}.tar.gz
      when: core.stat.exists is defined and core.stat.exists == False

    - name: Extraction de Tomcat
      command: chdir={{ tc_eng_dir }} tar xvf /tmp/apache-tomcat-{{ tc_ver }}.tar.gz creates={{ tc_eng_dir}}/apache-tomcat-{{ tc_ver }}
      when: core.stat.exists is defined and core.stat.exists == False

    - name: Create symlink
      file: src={{ tc_eng_dir }}/apache-tomcat-{{ tomcat_ver }} dest={{ tc_eng_dir }}/default state=link

    - name: Test si l instance est la
      stat: path={{ inst_dir }}/conf/server.xml
      register: instance

    - name: Create configuration directory
      file: path={{ tc_cfg_dir }}/{{ item }}/{{ inst }} state=directory mode=0755
      with_items:
         - "instances"
         - "apps"

    - name: Create security directory
      file: path={{ tc_cfg_dir }}/instances/{{ inst }}/security state=directory mode=0755

    - name: Create log directory
      file: path={{ log_dir }} state=directory mode=0755

    - name: Create application log directory
      file: path={{ logapp_dir }} state=directory mode=0755

    - name: Create symlink
      file: src=/{{ log_dir }} dest={{ inst_dir }}/logs state=link
      when: instance.stat.exists is defined and instance.stat.exists == False

    - name: Create instance
      command: cp -R {{ tc_eng_dir }}/default/{{ item }} {{ inst_dir }}/
      with_items:
         - "conf"
         - "webapps"
         - "work"
      when: instance.stat.exists is defined and instance.stat.exists == False
 
    - name: Create directories in instance
      file: path={{ inst_dir }}/{{ item }} state=directory mode=0755
      with_items:
        - "temp"
        - "bin"
        - "lib"

    - name: Change ownership of Tomcat installation
      file: path={{ tomcat_dir }}/tomcat-instances/ owner=tomcat group=tomcat state=directory recurse=yes

    - name: Change ownership of Tomcat installation
      file: path={{ tomcat_dir }}/apache-tomcat-{{ tomcat_ver}} owner=tomcat group=tomcat state=directory recurse=yes

    - name: Change ownership of Tomcat installation
      file: path=/var/log/tomcat/{{ tomcat_ins}} owner=tomcat group=tomcat state=directory recurse=yes

